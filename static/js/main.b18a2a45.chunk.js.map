{"version":3,"sources":["HtmlContent.js","Introduction.js","PreviewText.js","ImportText.js","Word.js","TranslationTableRow.js","TranslationTable.js","TranslationInput.js","Translations.js","SelectionButton.js","SelectionButtonGroup.js","Form.js","App.js","index.js"],"names":["HtmlContent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isValidLetter","bind","assertThisInitialized","getSelectedText","handleMouseUp","character","replace","selection","window","getSelection","anchorNode","focusNode","console","warn","removeAllRanges","node","parentNode","nodeName","nodeType","start","anchorOffset","end","focusOffset","temp","selectedText","nodeValue","substring","numberOfValidLetters","i","length","collapse","extend","adjustedSelectedText","info","onSelection","html","__html","content","react_default","a","createElement","className","dangerouslySetInnerHTML","onMouseUp","Component","Introduction","type","onClick","PreviewText","ImportText","showPreview","previewHtml","textAreaHeight","handleChange","handlePreview","handleImport","event","setState","target","value","scrollHeight","log","preview","onImport","div","document","innerHTML","textContent","innerText","height","onChange","style","src_PreviewText_0","Word","word","TranslationTableRow","language","text","handleRemove","TranslationTable","rows","translations","forEach","translation","index","push","src_TranslationTableRow_0","key","TranslationInput","_this2","autoFocus","handleAdd","getTranslation","Translations","readyForInput","handleClick","slice","filtered","filter","el","src_TranslationTable_0","src_TranslationInput_0","SelectionButton","id","name","SelectionButtonGroup","buttons","Array","fill","clickedButton","flexBasis","getNumberOfColumns","button","src_SelectionButton_0","undefined","Form","src_Word_0","textSelection","src_Translations_0","src_SelectionButtonGroup_0","App","introButtonClicked","currentTextSelection","handleIntro","handleSelection","alert","src_Introduction_0","src_ImportText_0","src_HtmlContent_0","src_Form_0","ReactDOM","render","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.b18a2a45.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './HtmlContent.scss';\r\n\r\nclass HtmlContent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n        this.isValidLetter = this.isValidLetter.bind(this);\r\n        this.getSelectedText = this.getSelectedText.bind(this);\r\n        this.handleMouseUp = this.handleMouseUp.bind(this);\r\n    }\r\n\r\n    isValidLetter(character) {\r\n        character = character.replace(/[^a-zA-Z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF]/, '');\r\n        return (character !== '');\r\n    }\r\n\r\n    getSelectedText() {\r\n        \r\n        const SELECTION_MAX_LENGTH = 100;\r\n    \r\n        // Get selection object\r\n        let selection = window.getSelection();\r\n    \r\n        // Make sure anchor and focus nodes are the same\r\n        if (selection.anchorNode !== selection.focusNode) {\r\n            console.warn('The anchor and focus nodes are different.');\r\n            selection.removeAllRanges();\r\n            return;\r\n        }\r\n\r\n        // Get anchor node object\r\n        let node = selection.anchorNode;\r\n\r\n        // Make sure the parent of this textnode is not a <span>\r\n        if (node.parentNode.nodeName === 'SPAN') {\r\n            console.warn('There is already a highlight here.');\r\n            selection.removeAllRanges();\r\n            return;\r\n        }\r\n\r\n        // Make sure it's a text node\r\n        if (node.nodeType !== 3) {\r\n            console.warn('The node is not a text node.');\r\n            selection.removeAllRanges();\r\n            return;\r\n        }\r\n\r\n        // Get start and end of selection\r\n        let start = selection.anchorOffset;\r\n        let end = selection.focusOffset;\r\n\r\n        // Make sure we got a proper mousedown-drag-mouseup selection\r\n        if (start === end) {\r\n            console.warn('At least one character must be selected.');\r\n            selection.removeAllRanges();\r\n            return;\r\n        }\r\n\r\n        // Reverse start and end if user made a backwards selection\r\n        if (start > end) {\r\n            let temp = end;\r\n            end = start;\r\n            start = temp;\r\n        }\r\n\r\n        // Make sure selection is not too long\r\n        if ((end - start) > SELECTION_MAX_LENGTH) {\r\n            console.warn('The selection is too long.');\r\n            selection.removeAllRanges();\r\n            return;\r\n        }\r\n\r\n        // Get selected text\r\n        let selectedText = node.nodeValue.substring(start, end);\r\n\r\n        // Make sure all characters in selection are valid letters or spaces\r\n        let numberOfValidLetters = 0;\r\n        for (let i = 0; i < selectedText.length; i++) {\r\n            if (this.isValidLetter(selectedText[i]) || selectedText[i] === ' ') {\r\n                if (selectedText[i] !== ' ') {\r\n                    numberOfValidLetters++;\r\n                }\r\n            } else {\r\n                console.warn('The selection contains invalid characters.');\r\n                selection.removeAllRanges();\r\n                return;\r\n            }\r\n        }\r\n\r\n        // Move selection start right until the first non-space character\r\n        while (start >= 0 && node.nodeValue.substring(start, start + 1) === ' ') {\r\n            start++;\r\n        }\r\n\r\n        // Move selection end left until the first non-space character\r\n        while (end <= node.nodeValue.length && node.nodeValue.substring(end - 1, end) === ' ') {\r\n            end--;\r\n        }\r\n\r\n        // Move selection start left while there are valid letters\r\n        while (start >= 0 && this.isValidLetter(node.nodeValue.substring(start - 1, start))) {\r\n            start--;\r\n        }\r\n\r\n        // Move selection end right while there are valid letters\r\n        while (end <= node.nodeValue.length - 1 && this.isValidLetter(node.nodeValue.substring(end, end + 1))) {\r\n            end++;\r\n        }\r\n\r\n        // Adjust selection\r\n        selection.collapse(node, start);\r\n        selection.extend(node, end);\r\n\r\n        // Make sure selection has at least one valid letter\r\n        if (numberOfValidLetters === 0) {\r\n            console.warn('The selection must have at least one valid letter.');\r\n            selection.removeAllRanges();\r\n            return;\r\n        }\r\n\r\n        // Get adjusted selected text\r\n        var adjustedSelectedText = node.nodeValue.substring(start, end);\r\n        console.info('A selection was made: %s (%d:%d)', adjustedSelectedText, start, end);\r\n        //this.setState({selection: adjustedSelectedText});\r\n        return adjustedSelectedText;\r\n\r\n        // Remember this selection (in case we need to restore it)\r\n        //window.lastSelection.node = node;\r\n        //window.lastSelection.start = start;\r\n        //window.lastSelection.end = end;\r\n\r\n        // Adjust form according to selection\r\n        //changeWord(adjustedSelectedText);\r\n    }\r\n\r\n    handleMouseUp() {\r\n        let selection = this.getSelectedText();\r\n        this.props.onSelection(selection);\r\n    }\r\n\r\n    render() {\r\n        let html = {__html: this.props.content};\r\n        return (\r\n            <div className=\"html-content\" dangerouslySetInnerHTML={html} onMouseUp={this.handleMouseUp}/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HtmlContent;\r\n","import React, { Component } from 'react';\r\nimport './Introduction.scss';\r\n\r\nclass Introduction extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"introduction\">\r\n                <h1>Welcome!</h1>\r\n                <p>This page is made for newbies like you. This page is made for newbies like you. This page is made for newbies like you. This page is made for newbies like you. This page is made for newbies like you. This page is made for newbies like you. This page is made for newbies like you.</p>\r\n                <div>\r\n                    <button type=\"button\" onClick={this.props.onClick}>import text</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Introduction;","import React, { Component } from 'react';\r\nimport './PreviewText.scss';\r\n\r\nclass PreviewText extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"preview-modal-background\">\r\n                <div className=\"preview-modal-dialog\">\r\n                    <h1>Text preview</h1>\r\n                    <hr />\r\n                    <div className=\"preview-text\" dangerouslySetInnerHTML={this.props.content} />\r\n                    <div className=\"button-row\">\r\n                        <button type=\"button\" onClick={this.props.onClick}>close</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PreviewText;","import React, { Component } from 'react';\r\nimport PreviewText from './PreviewText';\r\nimport './ImportText.scss';\r\n\r\nclass ImportText extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showPreview: false,\r\n            previewHtml: '',\r\n            textAreaHeight: 200\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handlePreview = this.handlePreview.bind(this);\r\n        this.handleImport = this.handleImport.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({previewHtml: event.target.value});\r\n        this.setState({scrollHeight: event.target.scrollHeight});\r\n        console.log(event.target.scrollHeight);\r\n    }\r\n\r\n    handlePreview() {\r\n        let preview = !this.state.showPreview;\r\n        this.setState({showPreview: preview});\r\n    }\r\n\r\n    handleImport() {\r\n        let html = this.state.previewHtml;\r\n        this.props.onImport(html);\r\n    }\r\n\r\n    cleanHtml(html) {\r\n        let div = document.createElement('div');\r\n        div.innerHTML = html;\r\n        let text = div.textContent || div.innerText || '';\r\n        return text;\r\n    }\r\n\r\n    render() {\r\n        let textAreaHeight = {height: this.state.textAreaHeight + 'px'};\r\n        let previewHtml = {__html: this.state.previewHtml};\r\n        return (\r\n            <div className=\"import-text\">\r\n                <h1>Import text</h1>\r\n                <p>Paste some text into the area below. HTML tags will be stripped, but markdown will be honored. When you click the button below, you can't change the text.</p>\r\n                <textarea value={this.state.previewHtml} onChange={this.handleChange} style={textAreaHeight} />\r\n                { (this.state.showPreview === true) ? <PreviewText content={previewHtml} onClick={this.handlePreview}/> : null }\r\n                <div>\r\n                    <button type=\"button\" onClick={this.handlePreview}>preview</button>\r\n                    <button type=\"button\" onClick={this.handleImport}>import</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ImportText;\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport './Word.scss';\r\n\r\nclass Word extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"word\">{this.props.word}</div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Word;\r\n","import React, { Component } from 'react';\r\nimport './TranslationTableRow.scss';\r\n\r\nclass TranslationTableRow extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"translation-table-row\">\r\n                <div className=\"language\">{this.props.language}</div>\r\n                <div className=\"translation\">{this.props.text}</div>\r\n                <button type=\"button\" onClick={() => this.props.handleRemove(this.props.text)}>remove</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TranslationTableRow;\r\n","import React, { Component } from 'react';\r\nimport TranslationTableRow from './TranslationTableRow';\r\nimport './TranslationTable.scss';\r\n\r\nclass TranslationTable extends Component {\r\n    render() {\r\n        const rows = [];\r\n        this.props.translations.forEach((translation, index) => {\r\n            rows.push(\r\n                <TranslationTableRow\r\n                    key={index}\r\n                    language={translation.language}\r\n                    text={translation.text}\r\n                    handleRemove={this.props.handleRemove} />\r\n            );\r\n        });\r\n        return (\r\n            <div className=\"translation-table\">{rows}</div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TranslationTable;\r\n","import React, { Component } from 'react';\r\nimport './TranslationInput.scss';\r\n\r\nclass TranslationInput extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            language: 'sv',\r\n            text: ''\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({text: event.target.value});\r\n    }\r\n\r\n    getTranslation() {\r\n        return {\r\n            language: this.state.language,\r\n            text: this.state.text\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"translation-input\">\r\n                <button type=\"button\" value={this.state.language} className=\"language\">{this.state.language}</button>\r\n                <input type=\"text\" value={this.state.text} onChange={this.handleChange} className=\"translation\" autoFocus />\r\n                <button type=\"button\" onClick={() => this.props.handleAdd(this.getTranslation())} className=\"add\">add</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TranslationInput;\r\n","import React, { Component } from 'react';\r\nimport TranslationTable from './TranslationTable';\r\nimport TranslationInput from './TranslationInput';\r\nimport './Translations.scss';\r\n\r\nclass Translations extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            readyForInput: false,\r\n            translations: [\r\n                { language: 'sv', text: 'bisarr' },\r\n                { language: 'sv', text: 'konstig' },\r\n                { language: 'sv', text: 'underlig' }\r\n            ]\r\n        };\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleAdd = this.handleAdd.bind(this);\r\n        this.handleRemove = this.handleRemove.bind(this);\r\n    }\r\n\r\n    handleClick() {\r\n        this.setState({readyForInput: !this.state.readyForInput})\r\n    }\r\n\r\n    handleAdd(translation) {\r\n        let translations = this.state.translations.slice();\r\n        translations.push(translation);\r\n        this.setState({translations: translations});\r\n        this.setState({readyForInput: false});\r\n    }\r\n\r\n    handleRemove(translation) {\r\n        let translations = this.state.translations.slice();\r\n        var filtered = translations.filter(function(el) { return el.text !== translation; });\r\n        this.setState({translations: filtered});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"translation-section\">\r\n                { (this.state.translations.length > 0) ? <TranslationTable translations={this.state.translations} handleRemove={this.handleRemove} /> : null }\r\n                { this.state.readyForInput ? <TranslationInput handleAdd={this.handleAdd} /> : null }\r\n                <button type=\"button\" onClick={this.handleClick}>\r\n                    { !this.state.readyForInput ? 'add translation' : 'cancel translation' }\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Translations;\r\n","import React, { Component } from 'react';\r\nimport './SelectionButton.scss';\r\n\r\nclass SelectionButton extends Component {\r\n    render() {\r\n        return (\r\n            <button\r\n                type=\"button\"\r\n                key={this.props.id}\r\n                name={this.props.id}\r\n                style={this.props.style}\r\n                onClick={this.props.onClick}\r\n                className={this.props.className}\r\n            >\r\n                {this.props.text}\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SelectionButton;\r\n","import React, { Component } from 'react';\r\nimport SelectionButton from './SelectionButton';\r\nimport './SelectionButtonGroup.scss';\r\n\r\nclass SelectionButtonGroup extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            buttons: Array(props.buttons.length).fill(false)\r\n        };\r\n    }\r\n\r\n    handleClick(index) {\r\n        const buttons = this.state.buttons.slice();\r\n        let clickedButton = buttons[index];\r\n        buttons.fill(false);\r\n        buttons[index] = !clickedButton;\r\n        this.setState({buttons: buttons});\r\n    }\r\n\r\n    getNumberOfColumns() {\r\n        switch (this.props.buttons.length) {\r\n            case 0:\r\n            case 1:\r\n                return 1;\r\n            case 2:\r\n            case 4:\r\n                return 2;\r\n            default:\r\n                return 3;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const rows = [];\r\n        let columns = this.getNumberOfColumns();\r\n        let style = { flexBasis: 100 / columns + '%' };\r\n        this.props.buttons.forEach((button, index) => {\r\n            rows.push(\r\n                <SelectionButton\r\n                    key={button.id}\r\n                    name={button.id}\r\n                    style={style}\r\n                    text={button.text}\r\n                    onClick={() => this.handleClick(index)}\r\n                    className={(this.state.buttons[index]) ? 'on' : undefined}\r\n                />\r\n            );\r\n        });\r\n        return (\r\n            <div className=\"button-group\">{rows}</div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SelectionButtonGroup;\r\n","import React, { Component } from 'react';\r\nimport Word from './Word';\r\nimport Translations from './Translations';\r\nimport SelectionButtonGroup from './SelectionButtonGroup';\r\nimport './Form.scss';\r\n\r\nclass Form extends Component {\r\n    render() {\r\n\r\n        const lexicalCategoryButtons = [\r\n            { id: 'noun', text: 'noun' },\r\n            { id: 'verb', text: 'verb' },\r\n            { id: 'adjective', text: 'adjective' },\r\n            { id: 'pronoun', text: 'pronoun' },\r\n            { id: 'adverb', text: 'adverb' },\r\n            { id: 'determiner', text: 'determiner' },\r\n            { id: 'preposition', text: 'preposition' },\r\n            { id: 'conjugation', text: 'conjugation' },\r\n            { id: 'interjection', text: 'interjection' }\r\n        ];\r\n\r\n        const genderButtons = [\r\n            { id: 'masculine', text: 'masculine' },\r\n            { id: 'feminine', text: 'feminine' }\r\n        ];\r\n\r\n        const numberButtons = [\r\n            { id: 'singular', text: 'singular' },\r\n            { id: 'plural', text: 'plural' }\r\n        ];\r\n\r\n        const properCommonButtons = [\r\n            { id: 'proper', text: 'proper' },\r\n            { id: 'common', text: 'common' }\r\n        ];\r\n\r\n        const abstractConcreteButtons = [\r\n            { id: 'abstract', text: 'abstract' },\r\n            { id: 'concrete', text: 'concrete' }\r\n        ];\r\n\r\n        const countableUncountableButtons = [\r\n            { id: 'countable', text: 'countable' },\r\n            { id: 'uncountable', text: 'uncountable' }\r\n        ];\r\n\r\n        const collectiveNounButtons = [\r\n            { id: 'collectiveNoun', text: 'collective noun' }\r\n        ];\r\n\r\n        const massNounButtons = [\r\n            { id: 'massNoun', text: 'mass noun' }\r\n        ];\r\n\r\n        return (\r\n            <div>\r\n                <Word word={this.props.textSelection} />\r\n                <Translations />\r\n                <SelectionButtonGroup buttons={lexicalCategoryButtons} />\r\n                <SelectionButtonGroup buttons={genderButtons} />\r\n                <SelectionButtonGroup buttons={numberButtons} />\r\n                <SelectionButtonGroup buttons={properCommonButtons} />\r\n                <SelectionButtonGroup buttons={abstractConcreteButtons} />\r\n                <SelectionButtonGroup buttons={countableUncountableButtons} />\r\n                <SelectionButtonGroup buttons={collectiveNounButtons} />\r\n                <SelectionButtonGroup buttons={massNounButtons} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;\r\n","import React, { Component } from 'react';\nimport HtmlContent from './HtmlContent';\nimport Introduction from './Introduction';\nimport ImportText from './ImportText';\nimport Form from './Form';\nimport './App.scss';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            introButtonClicked: false,\n            content: '',\n            currentTextSelection: null\n        };\n        this.handleIntro = this.handleIntro.bind(this);\n        this.handleImport = this.handleImport.bind(this);\n        this.handleSelection = this.handleSelection.bind(this);\n    }\n\n    handleIntro(content) {\n        this.setState({introButtonClicked: true});\n    }\n\n    handleImport(content) {\n        alert('handleImport');\n        this.setState({content: content});\n    }\n\n    handleSelection(text) {\n        this.setState({currentTextSelection: text});\n    }\n\n    render() {\n        return (\n        <div className=\"wrapper\">\n            <header className=\"header\">Header</header>\n            <article className=\"main\">\n                { (this.state.introButtonClicked === false) ? <Introduction onClick={this.handleIntro}/> : null }\n                { (this.state.introButtonClicked === true && this.state.content.length === 0) ? <ImportText onImport={this.handleImport}/> : null }\n                { (this.state.content.length > 0) ? <HtmlContent content={this.state.content} onSelection={this.handleSelection} /> : null }\n            </article>\n            <aside className=\"form\">\n                <Form textSelection={this.state.currentTextSelection}/>\n            </aside>\n            <footer className=\"footer\">Footer</footer>\n        </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}