{"version":3,"sources":["Word.js","TranslationTableRow.js","TranslationTable.js","TranslationInput.js","Translations.js","SelectionButton.js","SelectionButtonGroup.js","Form.js","App.js","serviceWorker.js","index.js"],"names":["Word","react_default","a","createElement","className","this","props","word","Component","TranslationTableRow","language","text","type","TranslationTable","_this","rows","translations","forEach","translation","index","push","src_TranslationTableRow_0","key","onClick","handleRemove","TranslationInput","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","languageSelection","name","value","autoFocus","handleClick","Translations","readyForInput","bind","assertThisInitialized","setState","slice","_this2","length","src_TranslationTable_0","src_TranslationInput_0","onAdd","handleAdd","SelectionButton","id","style","SelectionButtonGroup","buttons","Array","fill","clickedButton","flexBasis","getNumberOfColumns","button","src_SelectionButton_0","undefined","Form","src_Word_0","src_Translations_0","src_SelectionButtonGroup_0","App","src_Form_0","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f8b8164f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Word.scss';\r\n\r\nclass Word extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"word\">{this.props.word}</div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Word;\r\n","import React, { Component } from 'react';\r\nimport './TranslationTableRow.scss';\r\n\r\nclass TranslationTableRow extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"translation-table-row\">\r\n                <div className=\"language\">{this.props.language}</div>\r\n                <div className=\"translation\">{this.props.text}</div>\r\n                <button type=\"button\">remove</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TranslationTableRow;\r\n","import React, { Component } from 'react';\r\nimport TranslationTableRow from './TranslationTableRow';\r\nimport './TranslationTable.scss';\r\n\r\nclass TranslationTable extends Component {\r\n    render() {\r\n        const rows = [];\r\n        this.props.translations.forEach((translation, index) => {\r\n            rows.push(\r\n                <TranslationTableRow\r\n                    key={index}\r\n                    language={translation.language}\r\n                    text={translation.text}\r\n                    onClick={this.handleRemove} />\r\n                \r\n            );\r\n        });\r\n        return (\r\n            <div className=\"translation-table\">{rows}</div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TranslationTable;\r\n","import React, { Component } from 'react';\r\nimport './TranslationInput.scss';\r\n\r\nclass TranslationInput extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            language: 'fr',\r\n            languageSelection: ['fr', 'sv', 'en'],\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"translation-input\">\r\n                <button className=\"language\" type=\"button\" name=\"language\" value={this.state.language}>{this.state.language}</button>\r\n                <input className=\"translation\" type=\"text\" name=\"translation\" autoFocus />\r\n                <button className=\"add\" type=\"button\" name=\"add\" onClick={this.handleClick}>add</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TranslationInput;\r\n","import React, { Component } from 'react';\r\nimport TranslationTable from './TranslationTable';\r\nimport TranslationInput from './TranslationInput';\r\nimport './Translations.scss';\r\n\r\nclass Translations extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            readyForInput: false,\r\n            translations: [\r\n                { language: 'sv', text: 'bisarr' },\r\n                { language: 'sv', text: 'konstig' },\r\n                { language: 'sv', text: 'underlig' }\r\n            ]\r\n        };\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick() {\r\n        this.setState({readyForInput: !this.state.readyForInput})\r\n    }\r\n\r\n    handleAdd(translation) {\r\n        let translations = this.state.translations.slice();\r\n        translations.push(translation);\r\n        this.setState({translations: translations});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"translation-section\">\r\n                { (this.state.translations.length > 0) ? <TranslationTable translations={this.state.translations} /> : null }\r\n                { this.state.readyForInput ? <TranslationInput onAdd={() => this.handleAdd()} /> : null }\r\n                <button type=\"button\" onClick={this.handleClick}>\r\n                    { !this.state.readyForInput ? 'add translation' : 'cancel translation' }\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Translations;\r\n","import React, { Component } from 'react';\r\nimport './SelectionButton.scss';\r\n\r\nclass SelectionButton extends Component {\r\n    render() {\r\n        return (\r\n            <button\r\n                type=\"button\"\r\n                key={this.props.id}\r\n                name={this.props.id}\r\n                style={this.props.style}\r\n                onClick={this.props.onClick}\r\n                className={this.props.className}\r\n            >\r\n                {this.props.text}\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SelectionButton;\r\n","import React, { Component } from 'react';\r\nimport SelectionButton from './SelectionButton';\r\nimport './SelectionButtonGroup.scss';\r\n\r\nclass SelectionButtonGroup extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            buttons: Array(props.buttons.length).fill(false)\r\n        };\r\n    }\r\n\r\n    handleClick(index) {\r\n        const buttons = this.state.buttons.slice();\r\n        let clickedButton = buttons[index];\r\n        buttons.fill(false);\r\n        buttons[index] = !clickedButton;\r\n        this.setState({buttons: buttons});\r\n    }\r\n\r\n    getNumberOfColumns() {\r\n        switch (this.props.buttons.length) {\r\n            case 0:\r\n            case 1:\r\n                return 1;\r\n            case 2:\r\n            case 4:\r\n                return 2;\r\n            default:\r\n                return 3;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const rows = [];\r\n        let columns = this.getNumberOfColumns();\r\n        let style = { flexBasis: 100 / columns + '%' };\r\n        this.props.buttons.forEach((button, index) => {\r\n            rows.push(\r\n                <SelectionButton\r\n                    key={button.id}\r\n                    name={button.id}\r\n                    style={style}\r\n                    text={button.text}\r\n                    onClick={() => this.handleClick(index)}\r\n                    className={(this.state.buttons[index]) ? 'on' : undefined}\r\n                />\r\n            );\r\n        });\r\n        return (\r\n            <div className=\"button-group\">{rows}</div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SelectionButtonGroup;\r\n","import React, { Component } from 'react';\r\nimport Word from './Word';\r\nimport Translations from './Translations';\r\nimport SelectionButtonGroup from './SelectionButtonGroup';\r\nimport './Form.scss';\r\n\r\nclass Form extends Component {\r\n    render() {\r\n\r\n        const lexicalCategoryButtons = [\r\n            { id: 'noun', text: 'noun' },\r\n            { id: 'verb', text: 'verb' },\r\n            { id: 'adjective', text: 'adjective' },\r\n            { id: 'pronoun', text: 'pronoun' },\r\n            { id: 'adverb', text: 'adverb' },\r\n            { id: 'determiner', text: 'determiner' },\r\n            { id: 'preposition', text: 'preposition' },\r\n            { id: 'conjugation', text: 'conjugation' },\r\n            { id: 'interjection', text: 'interjection' }\r\n        ];\r\n\r\n        const genderButtons = [\r\n            { id: 'masculine', text: 'masculine' },\r\n            { id: 'feminine', text: 'feminine' }\r\n        ];\r\n\r\n        const numberButtons = [\r\n            { id: 'singular', text: 'singular' },\r\n            { id: 'plural', text: 'plural' }\r\n        ];\r\n\r\n        const properCommonButtons = [\r\n            { id: 'proper', text: 'proper' },\r\n            { id: 'common', text: 'common' }\r\n        ];\r\n\r\n        const abstractConcreteButtons = [\r\n            { id: 'abstract', text: 'abstract' },\r\n            { id: 'concrete', text: 'concrete' }\r\n        ];\r\n\r\n        const countableUncountableButtons = [\r\n            { id: 'countable', text: 'countable' },\r\n            { id: 'uncountable', text: 'uncountable' }\r\n        ];\r\n\r\n        const collectiveNounButtons = [\r\n            { id: 'collectiveNoun', text: 'collective noun' }\r\n        ];\r\n\r\n        const massNounButtons = [\r\n            { id: 'massNoun', text: 'mass noun' }\r\n        ];\r\n\r\n        const word = 'bizarre';\r\n\r\n        return (\r\n            <div>\r\n                <Word word={word} />\r\n                <Translations text={'add translation'} />\r\n                <SelectionButtonGroup buttons={lexicalCategoryButtons} />\r\n                <SelectionButtonGroup buttons={genderButtons} />\r\n                <SelectionButtonGroup buttons={numberButtons} />\r\n                <SelectionButtonGroup buttons={properCommonButtons} />\r\n                <SelectionButtonGroup buttons={abstractConcreteButtons} />\r\n                <SelectionButtonGroup buttons={countableUncountableButtons} />\r\n                <SelectionButtonGroup buttons={collectiveNounButtons} />\r\n                <SelectionButtonGroup buttons={massNounButtons} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;\r\n","import React, { Component } from 'react';\nimport Form from './Form';\nimport './App.scss';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <header className=\"header\">Header</header>\n        <article className=\"main\">\n          <h2>1. Un écueil fuyant</h2>\n          <p>L'année 1866 fut marquée par un événement <span className=\"adjective\">bizarre</span>, un phénomène inexpliqué et inexplicable que personne n'a sans doute oublié. Sans parler des rumeurs qui agitaient les populations des ports et surexcitaient l'esprit public à l'intérieur des continents les gens de mer furent particulièrement émus. Les négociants, armateurs, capitaines de navires, skippers et masters de l'Europe et de l'Amérique, officiers des marines militaires de tous pays, et, après eux, les gouvernements des divers États des deux continents, se préoccupèrent de ce fait au plus haut point.</p>\n          <p>En effet, depuis quelque temps, plusieurs navires s'étaient rencontrés sur mer avec « une chose énorme » un objet long, fusiforme, parfois phosphorescent, infiniment plus vaste et plus rapide qu'une baleine.</p>\n        </article>\n        <aside className=\"form\">\n          <Form/>\n        </aside>\n        <footer className=\"footer\">Footer</footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}